# Satellite Demo env installer

This is a simple demo environment provisioner for IdM to install.
It creates:
- libvirt-network with DHCP/DNS
- libvirt-pool for your VMS
- Satellite server 
- RHEL7 and RHEL8 Client for demo purposes

## VM setup

VM setup is based on Terraform, it instantiates three virtual machine, *satellite*, *el7-server* and *el8-server*, kickstarting the setup.

First you need to download and install Terraform:

    sudo yum install -y yum-utils
    sudo yum-config-manager --add-repo https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo
    sudo yum -y install terraform

Then you need to download the FULL RHEL8 image and link it in the modules folder and create a symbolic link in the modules folder:

    ln -s /path/to/rhel7iso terraform/modules/01_satellite_instance/rhel7.iso
    ln -s /path/to/rhel7iso terraform/modules/02_client_instance/rhel7.iso
    ln -s /path/to/rhel8iso terraform/modules/02_client_instance/rhel8.iso

Review settings in **provision-lab.yml** file, containing some basic inputs:

    network_cidr = ["192.168.211.0/24"]

The terraform plan also creates an isolated virtual network, with DHCP and DNS for the specified domain.

Run the playbook to provision the VMs:

    ansible-playbook -i inventory provision-lab.yml

The setup will take a bit as it is a full install with a kickstarter. 

## IdM setup

Once your VMs are up and running I prepared an execution-environment to use with Ansible, to use freeipa.ansible_freeipa collection to provision both server and client.

From the *satellite* folder, build your execution-environment:

    ansible-builder build -c ansible/execution-environment/context -f ansible/execution-environment/execution-environment.yml -t ansible-execution-env

Edit *ansible/inventory* file if you need fine tuning on attributes (i.e. if you changed the domain):

    [ipaserver]
    idm-server.rhdemo.labs

    [ipaclients]
    idm-client.rhdemo.labs

    [ipaservers]
    idm-server.rhdemo.labs

    [ipaserver:vars]
    ipaserver_domain=rhdemo.labs
    ipaserver_realm=RHDEMO.LABS
    ipaserver_setup_dns=yes
    ipaserver_setup_adtrust=yes
    ipaserver_auto_forwarders=yes
    ipaadmin_password=admin123
    ipadm_password=admin123

    [ipaclients:vars]
    ipaclient_domain=rhdemo.labs
    ipaclient_realm=RHDEMO.LABS
    ipaserver_domain=rhdemo.labs
    ipaserver_realm=RHDEMO.LABS
    ipaadmin_principal=admin
    ipaadmin_password=admin123
    ipassd_enable_dns_updates=true

Then launch the playbook to install **idm-server**:

    ansible-navigator run -m stdout --eei=ansible-execution-env --pp never --pae false -i ansible/inventory ansible/idm-server-setup.yml 

If you want to configure the client to connect to idm-server launch the playbook to setup **idm-client**:

    ansible-navigator run -m stdout --eei=ansible-execution-env --pp never --pae false -i ansible/inventory ansible/idm-client-setup.yml 


## Test your configuration

If the setup was good, you will be able to access your IdM server on https://idm-server.<your-domain>